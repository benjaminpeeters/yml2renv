% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_value.R
\name{get_value}
\alias{get_value}
\title{Get Single Environment Variable Value}
\usage{
get_value(var_name, package = NULL, user = "default", default = NULL)
}
\arguments{
\item{var_name}{Character string with the environment variable name to retrieve.}

\item{package}{Character string with the package name. If NULL (default),
uses the current package name.}

\item{user}{Character string for the user/section in the YAML file (default: "default").}

\item{default}{Optional default value to return if the variable is not found
in any configuration source. If NULL (default), returns NA when not found.}
}
\value{
Character string with the variable value, or the default value if not found.
}
\description{
Retrieves the value of a single environment variable with priority resolution.
This function respects the priority hierarchy: .Renviron > local config > template.
}
\details{
Unlike \code{get_values()} which retrieves multiple values from a specific source,
\code{get_value()} retrieves a single value using the priority system.
}
\examples{
\dontrun{
# Get a single variable value with priority resolution
api_key <- get_value("API_KEY", package = "mypackage")

# Get value with a default fallback
db_host <- get_value("DB_HOST", package = "mypackage", default = "localhost")

# Get value for current package
debug_mode <- get_value("DEBUG_MODE", default = "FALSE")
}

}
