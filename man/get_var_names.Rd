% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_var_names.R
\name{get_var_names}
\alias{get_var_names}
\title{Get Environment Variable Names}
\usage{
get_var_names(
  package = NULL,
  user = "default",
  origin = "local",
  yaml_file = NULL,
  case_format = "snake_case"
)
}
\arguments{
\item{package}{Character string with the package name. If NULL (default),
uses the current package name.}

\item{user}{Character string for the user/section in the YAML file (default: "default").}

\item{origin}{Character string specifying where to read the configuration from:
\itemize{
\item "template": Read from the package's template YAML file
\item "local": Read from the user's local configuration file (default)
\item "renviron": Read from .Renviron file
\item "priority": Read with priority order (.Renviron > local config)
}}

\item{yaml_file}{Character string with custom filename. If NULL,
uses the default naming pattern.}

\item{case_format}{Character string indicating the case format to use for filenames.
Options are: "snake_case" (default), "camelCase", "PascalCase", "kebab-case".}
}
\value{
Character vector of environment variable names.
}
\description{
Retrieves the list of environment variable names defined in a package's
configuration file. This function is useful for discovering what environment
variables a package expects to use.
}
\examples{
\dontrun{
# Get variable names from local config
var_names <- get_var_names("mypackage")

# Get variable names from template (to see all possible variables)
all_vars <- get_var_names("mypackage", origin = "template")

# Use these names for validation or to retrieve current values
current_values <- lapply(var_names, Sys.getenv, unset = NA)
names(current_values) <- var_names
}

}
